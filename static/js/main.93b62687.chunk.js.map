{"version":3,"sources":["utils/generate-data.ts","utils/colors.ts","utils/constants.ts","Board.tsx","components/Button.tsx","Player.tsx","App.tsx","sorting-algos/bubble-sort.ts","sorting-algos/selection-sort.ts","index.tsx"],"names":["amount","maxValue","_","chain","range","map","i","id","random","value","position","TIMER_DELAY","SLOW","NORMAL","FAST","TRANSITION_DELAY","Board","props","console","log","dataSet","style","height","width","display","flexDirection","justifyContent","alignItems","legends","legend","key","description","marginLeft","backgroundColor","color","borderRadius","marginRight","margin","padding","fontSize","colors","flex","e","transition","transitionDelay","bottom","left","length","boxSizing","textAlign","Button","styled","button","rounded","selected","disabled","Player","canBackward","onClick","onClickBackward","canPlayOrPause","onClickPlay","isPlaying","canForward","onClickForward","canStop","onClickStop","progress","App","displayIntervalId","useRef","undefined","useState","setIsPlaying","generateData","setDataSet","sortingStatus","setSortingStatus","speed","setSpeed","algo","setAlgo","handleSpeedChanged","nextSpeed","startPlaying","handleAlgoChanged","nextAlgo","stepForward","prevState","displayedIndex","movements","stopPlaying","stepBackward","clearInterval","current","setInterval","constants","Provider","size","verticalAlign","alignSelf","border","sortingResult","initialState","cloneDeep","item","push","swapped","j","nextStatus","last","elementA","find","elementB","forEach","temp","sortedElement","bubbleSort","state","minIndex","currentItem","lastItem","currentMinItem","minItem","itemInPositionI","selectionSort","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93b62687.chunk.js","sourcesContent":["import { DataSet } from \"../interfaces\";\nimport _ from \"lodash\";\n\nexport default (amount: number, maxValue: number): DataSet => {\n  const elements = _.chain(amount)\n    .range()\n    .map(i => ({ id: _.random(1, true), value: _.random(1, maxValue), position: i }))\n    .value();\n\n  return elements;\n};\n","export default {\n  white: \"#eaeaea\",\n  selected: \"#1fab89\",\n  unsorted: \"#40514e\",\n  sorted: \"#fc5185\",\n  comparing: \"#f08a5d\",\n  unsortedSmallest: \"#916dd5\",\n};\n","import { Speed } from \"../interfaces\";\n\nconst TIMER_DELAY: { [speed in Speed]: number } = {\n  SLOW: 500,\n  NORMAL: 150,\n  FAST: 15,\n};\n\nconst TRANSITION_DELAY: { [speed in Speed]: string } = {\n  SLOW: \"500ms\",\n  NORMAL: \"150ms\",\n  FAST: \"0ms\",\n};\n\nexport default {\n  TIMER_DELAY,\n  TRANSITION_DELAY,\n};\n","import React from \"react\";\n\nimport { DataSet, Legend } from \"./interfaces\";\nimport { colors } from \"./utils\";\n\ninterface Props {\n  maxValue: number;\n  legends: Legend[];\n  dataSet: DataSet;\n  transitionDelay: string;\n}\nconst Board: React.FC<Props> = props => {\n  console.log(props.dataSet);\n  return (\n    <div style={{ height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n      <div\n        style={{\n          height: \"5%\",\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\",\n        }}\n      >\n        {props.legends.map(legend => (\n          <div\n            key={legend.description}\n            style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", marginLeft: \"20px\" }}\n          >\n            <div\n              style={{\n                height: \"1em\",\n                width: \"3em\",\n                backgroundColor: legend.color,\n                borderRadius: \"5px\",\n                marginRight: \"5px\",\n              }}\n            ></div>\n            <p style={{ margin: 0, padding: 0, fontSize: \"1em\", color: colors.white }}>{legend.description}</p>\n          </div>\n        ))}\n      </div>\n      <div style={{ flex: 1, width: \"100%\", position: \"relative\" }}>\n        {props.dataSet.map(e => (\n          <div\n            key={e.id}\n            style={{\n              transition: `all ${props.transitionDelay}`,\n              position: \"absolute\",\n              bottom: 0,\n              left: `calc((100% / ${props.dataSet.length}) * ${e.position})`,\n              height: \"100%\",\n              width: `calc(100% / ${props.dataSet.length})`,\n              padding: \"5px\",\n              boxSizing: \"border-box\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <p\n              style={{\n                transition: `all ${props.transitionDelay}`,\n                color: e.color || colors.white,\n                margin: 0,\n                textAlign: \"center\",\n                fontSize: \"1.2rem\",\n              }}\n            >\n              {e.value}\n            </p>\n            <div\n              style={{\n                transition: `all ${props.transitionDelay}`,\n                height: `calc((100% - 1.2rem) * ${e.value / props.maxValue})`,\n                width: \"100%\",\n                backgroundColor: e.color || colors.white,\n                borderRadius: \"5px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"flex-start\",\n                alignItems: \"center\",\n              }}\n            ></div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import styled from \"styled-components\";\nimport { colors } from \"../utils\";\n\ninterface ButtonProps {\n  readonly color?: string;\n  readonly rounded?: boolean;\n  readonly selected?: boolean;\n}\nconst Button = styled.button<ButtonProps>`\n  height: ${props => (props.rounded ? \"50px\" : \"fit-content\")};\n  width: ${props => (props.rounded ? \"50px\" : \"fit-content\")};\n  border-radius: ${props => (props.rounded ? \"50%\" : \"5px\")};\n  background-color: transparent;\n  border: 2px solid;\n  border-color: ${props => (props.selected ? colors.selected : props.color ? props.color : colors.white)};\n  color: ${props => (props.selected ? colors.selected : props.color ? props.color : colors.white)};\n  margin: 0px 10px;\n  opacity: ${props => (props.disabled ? 0.5 : 1)};\n  transition: all 300ms;\n\n  &:focus {\n    outline: none;\n  }\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nexport default Button;\n","import React from \"react\";\nimport { MdPlayArrow, MdPause, MdFastForward, MdFastRewind, MdStop } from \"react-icons/md\";\n\nimport Button from \"./components/Button\";\n\ninterface Props {\n  isPlaying: boolean;\n  canPlayOrPause: boolean;\n  canStop: boolean;\n  canForward: boolean;\n  canBackward: boolean;\n  progress: number;\n  onClickPlay: () => void;\n  onClickStop: () => void;\n  onClickForward: () => void;\n  onClickBackward: () => void;\n}\nconst Player: React.FC<Props> = props => {\n  return (\n    <div\n      style={{\n        height: \"100px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\",\n      }}\n    >\n      <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\" }}>\n        <Button rounded disabled={!props.canBackward} onClick={props.onClickBackward}>\n          <MdFastRewind />\n        </Button>\n        <Button rounded disabled={!props.canPlayOrPause} onClick={props.onClickPlay}>\n          {props.isPlaying ? <MdPause /> : <MdPlayArrow />}\n        </Button>\n        <Button rounded disabled={!props.canForward} onClick={props.onClickForward}>\n          <MdFastForward />\n        </Button>\n        <Button rounded disabled={!props.canStop} onClick={props.onClickStop}>\n          <MdStop />\n        </Button>\n      </div>\n      <div style={{ height: \"5px\", width: \"500px\", backgroundColor: \"gray\", borderRadius: \"2px\" }}>\n        <div\n          style={{\n            transition: \"all 200ms\",\n            height: \"100%\",\n            width: `${props.progress}%`,\n            backgroundColor: \"silver\",\n            borderRadius: \"2px\",\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React, { useState, useRef } from \"react\";\nimport _ from \"lodash\";\nimport { IconContext } from \"react-icons\";\n\nimport { generateData, colors, constants } from \"./utils\";\nimport { bubbleSort, selectionSort } from \"./sorting-algos\";\nimport Board from \"./Board\";\nimport Player from \"./Player\";\nimport { DataSet, Legend, Speed, SortingAlgo } from \"./interfaces\";\nimport Button from \"./components/Button\";\n\nconst App: React.FC = () => {\n  const displayIntervalId = useRef<number | undefined>(undefined);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [dataSet, setDataSet] = useState(generateData(_.random(10, 50), 50));\n  const [sortingStatus, setSortingStatus] = useState<\n    { legends: Legend[]; movements: DataSet[]; displayedIndex: number } | undefined\n  >(undefined);\n  const [speed, setSpeed] = useState<Speed>(\"NORMAL\");\n  const [algo, setAlgo] = useState<SortingAlgo>(\"BUBBLE\");\n\n  const handleGenerateData = () => {\n    setDataSet(generateData(_.random(10, 50), 50));\n    setSortingStatus(undefined);\n  };\n\n  const handlePlayClicked = () => {\n    if (sortingStatus === undefined) {\n      const sortingResult = algo === \"BUBBLE\" ? bubbleSort(dataSet) : selectionSort(dataSet);\n      setSortingStatus({\n        movements: sortingResult.movements,\n        legends: sortingResult.legends,\n        displayedIndex: 0,\n      });\n    }\n\n    if (isPlaying) {\n      stopPlaying();\n    } else {\n      startPlaying(speed);\n    }\n  };\n\n  const handleStopClicked = () => {\n    stopPlaying();\n    setSortingStatus(undefined);\n  };\n\n  const handleForwardClicked = () => {\n    stopPlaying();\n    stepForward();\n  };\n\n  const handleBackwardClicked = () => {\n    stopPlaying();\n    stepBackward();\n  };\n\n  const handleSpeedChanged = (nextSpeed: Speed) => {\n    if (speed !== nextSpeed) {\n      setSpeed(nextSpeed);\n\n      if (isPlaying) {\n        startPlaying(nextSpeed);\n      }\n    }\n  };\n\n  const handleAlgoChanged = (nextAlgo: SortingAlgo) => {\n    setAlgo(nextAlgo);\n  };\n\n  const stepForward = () => {\n    setSortingStatus(prevState => {\n      if (prevState === undefined) {\n        return prevState;\n      }\n\n      const nextIndex = prevState.displayedIndex + 1;\n\n      if (nextIndex === prevState.movements.length - 1) {\n        stopPlaying();\n      }\n\n      return { ...prevState, displayedIndex: prevState.displayedIndex + 1 };\n    });\n  };\n\n  const stepBackward = () => {\n    setSortingStatus(prevState => {\n      if (prevState === undefined) {\n        return prevState;\n      }\n\n      if (prevState.displayedIndex > 0) {\n        return { ...prevState, displayedIndex: prevState.displayedIndex - 1 };\n      } else {\n        return prevState;\n      }\n    });\n  };\n\n  const startPlaying = (speed: Speed) => {\n    setIsPlaying(true);\n\n    clearInterval(displayIntervalId.current);\n    displayIntervalId.current = undefined;\n\n    displayIntervalId.current = setInterval(() => {\n      stepForward();\n    }, constants.TIMER_DELAY[speed]);\n  };\n\n  const stopPlaying = () => {\n    setIsPlaying(false);\n    clearInterval(displayIntervalId.current);\n    displayIntervalId.current = undefined;\n  };\n\n  const canPlayOrPause = !(sortingStatus && sortingStatus.displayedIndex >= sortingStatus.movements.length - 1);\n  const canStop = sortingStatus !== undefined;\n  const canForward = sortingStatus !== undefined && sortingStatus.displayedIndex < sortingStatus.movements.length - 1;\n  const canBackward = sortingStatus !== undefined && sortingStatus!.displayedIndex > 0;\n  const progress = sortingStatus ? (sortingStatus.displayedIndex / (sortingStatus.movements.length - 1)) * 100 : 0;\n\n  return (\n    <IconContext.Provider value={{ size: \"2em\", style: { verticalAlign: \"middle\" } }}>\n      <div style={{ width: \"100vw\", height: \"100vh\", display: \"flex\", flexDirection: \"column\" }}>\n        <div\n          style={{\n            flex: 1,\n            display: \"flex\",\n            flexDirection: \"row\",\n          }}\n        >\n          <div\n            style={{\n              padding: 20,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Button\n              disabled={sortingStatus !== undefined}\n              onClick={handleGenerateData}\n              style={{ padding: 10, fontSize: \"1em\" }}\n            >\n              GENERATE NEW DATA\n            </Button>\n          </div>\n          <div style={{ height: \"50%\", width: \"2px\", backgroundColor: \"silver\", alignSelf: \"center\" }}></div>\n          <div\n            style={{\n              padding: 20,\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Button\n              disabled={sortingStatus !== undefined}\n              style={{ padding: 10, border: \"none\", fontSize: \"1em\" }}\n              selected={algo === \"BUBBLE\"}\n              onClick={() => handleAlgoChanged(\"BUBBLE\")}\n            >\n              BUBBLE SORT\n            </Button>\n            <Button\n              disabled={sortingStatus !== undefined}\n              style={{ padding: 10, border: \"none\", fontSize: \"1em\" }}\n              selected={algo === \"SELECTION\"}\n              onClick={() => handleAlgoChanged(\"SELECTION\")}\n            >\n              SELECTION SORT\n            </Button>\n            <Button\n              disabled={sortingStatus !== undefined}\n              style={{ padding: 10, border: \"none\", fontSize: \"1em\" }}\n              selected={algo === \"INSERTION\"}\n              onClick={() => handleAlgoChanged(\"INSERTION\")}\n            >\n              INSERTION SORT\n            </Button>\n            <Button\n              disabled={sortingStatus !== undefined}\n              style={{ padding: 10, border: \"none\", fontSize: \"1em\" }}\n              selected={algo === \"QUICK\"}\n              onClick={() => handleAlgoChanged(\"QUICK\")}\n            >\n              QUICK SORT\n            </Button>\n          </div>\n        </div>\n        <div style={{ flex: 5, padding: \"10px 40px\" }}>\n          <Board\n            maxValue={50}\n            transitionDelay={isPlaying ? constants.TRANSITION_DELAY[speed] : \"500ms\"}\n            legends={sortingStatus ? sortingStatus.legends : []}\n            dataSet={sortingStatus ? sortingStatus.movements[sortingStatus.displayedIndex] : dataSet}\n          />\n        </div>\n        <div style={{ flex: 1, display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ flex: 1 }}></div>\n          <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <Player\n              isPlaying={isPlaying}\n              canPlayOrPause={canPlayOrPause}\n              canStop={canStop}\n              canForward={canForward}\n              canBackward={canBackward}\n              progress={progress}\n              onClickPlay={handlePlayClicked}\n              onClickStop={handleStopClicked}\n              onClickForward={handleForwardClicked}\n              onClickBackward={handleBackwardClicked}\n            />\n          </div>\n          <div\n            style={{\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n            }}\n          >\n            <p style={{ fontSize: \"1em\", color: colors.white }}>SPEED</p>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <Button\n                style={{ padding: 10, border: \"none\" }}\n                selected={speed === \"SLOW\"}\n                onClick={() => handleSpeedChanged(\"SLOW\")}\n              >\n                SLOW\n              </Button>\n              <Button\n                style={{ padding: 10, border: \"none\" }}\n                selected={speed === \"NORMAL\"}\n                onClick={() => handleSpeedChanged(\"NORMAL\")}\n              >\n                NORMAL\n              </Button>\n              <Button\n                style={{ padding: 10, border: \"none\" }}\n                selected={speed === \"FAST\"}\n                onClick={() => handleSpeedChanged(\"FAST\")}\n              >\n                FAST\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </IconContext.Provider>\n  );\n};\n\nexport default App;\n","import _ from \"lodash\";\n\nimport { colors } from \"../utils\";\nimport { DataSet, SortingResult } from \"../interfaces\";\n\nexport default (dataSet: DataSet): SortingResult => {\n  const length = dataSet.length;\n  const movements: DataSet[] = [];\n\n  const initialState = _.chain(dataSet)\n    .cloneDeep()\n    .map(item => {\n      item.color = colors.unsorted;\n      return item;\n    })\n    .value();\n  movements.push(initialState);\n\n  for (let i = 0; i < length; i++) {\n    let swapped = false;\n    for (let j = 0; j < length - 1 - i; j++) {\n      const nextStatus = _.cloneDeep(_.last(movements))!;\n      const elementA = _.find(nextStatus, e => e.position === j)!;\n      const elementB = _.find(nextStatus, e => e.position === j + 1)!;\n\n      nextStatus.forEach(e => {\n        if (e.color === colors.comparing) {\n          e.color = colors.unsorted;\n        }\n      });\n      elementA.color = colors.comparing;\n      elementB.color = colors.comparing;\n\n      movements.push(_.cloneDeep(nextStatus));\n\n      if (elementA.value - elementB.value > 0) {\n        swapped = true;\n\n        const temp = elementA.position;\n        elementA.position = elementB.position;\n        elementB.position = temp;\n        movements.push(_.cloneDeep(nextStatus));\n      }\n    }\n\n    const nextStatus = _.cloneDeep(_.last(movements))!;\n\n    if (!swapped) {\n      nextStatus.forEach(e => {\n        e.color = colors.sorted;\n      });\n      movements.push(_.cloneDeep(nextStatus));\n      break;\n    }\n\n    const sortedElement = _.find(nextStatus, e => e.position === length - 1 - i)!;\n    nextStatus.forEach(e => {\n      if (e.color === colors.comparing) {\n        e.color = colors.unsorted;\n      }\n    });\n    sortedElement.color = colors.sorted;\n    movements.push(_.cloneDeep(nextStatus));\n  }\n\n  return {\n    legends: [\n      { description: \"Unsorted\", color: colors.unsorted },\n      { description: \"Comparing\", color: colors.comparing },\n      { description: \"Sorted\", color: colors.sorted },\n    ],\n    movements,\n  };\n};\n","import _ from \"lodash\";\n\nimport { colors } from \"../utils\";\nimport { DataSet, SortingResult } from \"../interfaces\";\n\nexport default (dataSet: DataSet): SortingResult => {\n  const length = dataSet.length;\n  const movements: DataSet[] = [];\n\n  const state = _.chain(dataSet)\n    .cloneDeep()\n    .map(item => {\n      item.color = colors.unsorted;\n      return item;\n    })\n    .value();\n  movements.push(_.cloneDeep(state));\n\n  for (let i = 0; i < length; i++) {\n    let minIndex = i;\n\n    const initialMinItem = _.find(state, e => e.position === minIndex)!;\n\n    initialMinItem.color = colors.unsortedSmallest;\n    movements.push(_.cloneDeep(state));\n\n    for (let j = i + 1; j < length; j++) {\n      const currentItem = _.find(state, e => e.position === j)!;\n      const lastItem = _.find(state, e => e.position === j - 1)!;\n      // eslint-disable-next-line\n      const currentMinItem = _.find(state, e => e.position === minIndex)!;\n\n      if (lastItem.color === colors.comparing) {\n        lastItem.color = colors.unsorted;\n      }\n      currentItem.color = colors.comparing;\n      movements.push(_.cloneDeep(state));\n\n      if (currentItem.value < currentMinItem.value) {\n        minIndex = j;\n        currentItem.color = colors.unsortedSmallest;\n        currentMinItem.color = colors.unsorted;\n\n        movements.push(_.cloneDeep(state));\n      } else {\n        currentItem.color = colors.unsorted;\n      }\n    }\n\n    const minItem = _.find(state, e => e.position === minIndex)!;\n    const itemInPositionI = _.find(state, e => e.position === i)!;\n\n    const temp = itemInPositionI.position;\n    itemInPositionI.position = minItem.position;\n    minItem.position = temp;\n    minItem.color = colors.sorted;\n\n    movements.push(_.cloneDeep(state));\n  }\n\n  return {\n    movements,\n    legends: [\n      { description: \"Unsorted\", color: colors.unsorted },\n      { description: \"Unsorted Smallest\", color: colors.unsortedSmallest },\n      { description: \"Comparing\", color: colors.comparing },\n      { description: \"Sorted\", color: colors.sorted },\n    ],\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}